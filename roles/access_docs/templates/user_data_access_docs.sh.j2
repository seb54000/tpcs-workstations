#! /bin/bash -xe
exec > >(tee /var/log/user-data.log|logger -t user-data -s 2>/dev/console) 2>&1
echo BEGIN
BEGIN_DATE=$(date '+%Y-%m-%d %H:%M:%S')
echo "BEGIN_DATE : $BEGIN_DATE"

## Transfer ansible variables to bash variables
acme_certificates_enable={{ acme_certificates_enable }}
copy_from_gdrive={{ copy_from_gdrive }}
dns_subdomain="{{ dns_subdomain }}"
username="access"

## docs related part #############

if [[ "${acme_certificates_enable}" == "true" ]]
then
    sudo certbot --nginx -d docs.${dns_subdomain} -d www.docs.${dns_subdomain} \
        --non-interactive --agree-tos \
        --no-eff-email \
        --no-redirect \
        --email 'user@test.com'
fi

# if [[ "${copy_from_gdrive}" == "true" ]]
# then
    # Download a list of files (pdf for the TP)
#    pip install --upgrade google-api-python-client google-auth-httplib2 google-auth-oauthlib
#    python3 /var/tmp/gdrive.py
#    rm -f /var/tmp/token.json
# fi

rm -f /var/www/html/index.nginx-debian.html

# Every 5 minutes, run the checks scripts and publish to html file
# echo "*/5 * * * * sudo check_basics > /var/www/html/check_basics.html" | crontab -

# Every 5 minutes run the vms.php script to update vms.html summary
# echo "*/5 * * * * root php /root/vms.php > /var/tmp/vms.html && mv /var/tmp/vms.html /var/www/html/vms.html" > /etc/cron.d/php_vm_cron


if [[ "${acme_certificates_enable}" == "true" ]]
then
    # Certificate is valid for 90 days, more than enough for our use case - no need to renew
    sudo certbot --nginx -d access.${dns_subdomain} -d www.access.${dns_subdomain} \
        --non-interactive --agree-tos \
        --no-eff-email \
        --no-redirect \
        --email 'user@test.com'
fi


# Deploy Prometheus and Grafana
# Grafana Dashboards links for reference
# https://grafana.com/api/dashboards/11133/revisions/2/download
# https://grafana.com/api/dashboards/1860/revisions/37/download

# COMMENTED BECAUSE MOVED TO ANSIBLE ROLE
# If docker-compose file is not belonging to ${username} it doesn't work and if we want to directly write_file (from cloudinit) in ${username} home directory it breaks compeltely the user creation...
# mv /var/tmp/monitoring_docker_compose.yml /home/${username}/monitoring_docker_compose.yml
# chown ${username}:${username} /home/${username}/monitoring_docker_compose.yml
# sudo su - ${username} -c "docker-compose -f monitoring_docker_compose.yml up -d"
# docker-compose -f monitoring_docker_compose.yml down -v

if [[ "${acme_certificates_enable}" == "true" ]]
then
    # Certificate is valid for 90 days, more than enough for our use case - no need to renew
    sudo certbot --nginx -d monitoring.${dns_subdomain} -d www.monitoring.${dns_subdomain} \
        --non-interactive --agree-tos \
        --no-eff-email \
        --no-redirect \
        --email 'user@test.com'
    sudo certbot --nginx -d prometheus.${dns_subdomain} -d www.prometheus.${dns_subdomain} \
        --non-interactive --agree-tos \
        --no-eff-email \
        --no-redirect \
        --email 'user@test.com'
    sudo certbot --nginx -d grafana.${dns_subdomain} -d www.grafana.${dns_subdomain} \
        --non-interactive --agree-tos \
        --no-eff-email \
        --no-redirect \
        --email 'user@test.com'
fi

echo "### Notify end of user_data ###"
touch /home/${username}/user_data_finished
END_DATE=$(date '+%Y-%m-%d %H:%M:%S')
echo "BEGIN_DATE : $BEGIN_DATE"
echo "END_DATE : $END_DATE"
echo END